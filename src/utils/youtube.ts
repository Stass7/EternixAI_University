export function extractYouTubeVideoId(url: string): string | null { if (!url) return null; const patterns = [/(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/shorts\/)([^?&]+)/i, /youtube\.com\/embed\/([a-zA-Z0-9_-]{11})/, /youtube\.com\/v\/([a-zA-Z0-9_-]{11})/, /^[a-zA-Z0-9_-]{11}$/]; for (const pattern of patterns) { const match = url.match(pattern); if (match && match[1]) { return match[1]; } } if (url.length === 11 && /^[a-zA-Z0-9_-]{11}$/.test(url)) { return url; } return null; }
export function getYouTubeThumbnail(videoId: string, quality: "maxres" | "hq" | "mq" | "default" = "hq"): string { const qualityMap = { maxres: "maxresdefault", hq: "hqdefault", mq: "mqdefault", default: "default" }; return `https://img.youtube.com/vi/${videoId}/${qualityMap[quality]}.jpg`; }
export function getThumbnailFromUrl(youtubeUrl: string, quality: "maxres" | "hq" | "mq" | "default" = "hq"): string | null { const videoId = extractYouTubeVideoId(youtubeUrl); if (!videoId) return null; return getYouTubeThumbnail(videoId, quality); }
export function isYouTubeUrl(url: string): boolean { return extractYouTubeVideoId(url) !== null; }
